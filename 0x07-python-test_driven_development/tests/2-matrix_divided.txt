>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> matrix_divided([[1, 2], [2, 3]], None)
Traceback (most recent call last):
         ...
TypeError: div must be a number

>>> matrix_divided("i", 1)
Traceback (most recent call last):
         ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 1)
Traceback (most recent call last):
         ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [2, 3]], "i")
Traceback (most recent call last):
         ...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [2]], 3)
Traceback (most recent call last):
         ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], [2, "i"]], 3)
Traceback (most recent call last):
         ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [2, 3]], 0)
Traceback (most recent call last):
	 ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [2, 3]], 1)
[[1.0, 2.0], [2.0, 3.0]]
Checking for no args:
	 >>> matrix_divided()
         Traceback (most recent call last):
         ...
         TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[1, 2, 3], [4, 5, 6]]
Checking for 1 arg:
	 >>> matrix_divided(matrix)
	 Traceback (most recent call last):
	 ...
    	 TypeError: matrix_divided() missing 1 required positional argument: 'div'

Checking for more than 2 args:
	 >>> matrix_divided(matrix, 1, 3)
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_divided() takes 2 positional arguments but 3 were given
